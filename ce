#!/bin/bash
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[1;36m'
RESET='\033[0m'

VERSION="1.0.0"
CONFIG_FILE=/etc/limit_config.conf
source $CONFIG_FILE
IFACE=$(ip -o link show | awk -F': ' '{print $2}' | grep -vE '^(lo|docker|br-|veth|tun|vmnet|virbr)' | head -n 1)

get_usage_info() {
  RAW=$(vnstat --oneline -i "$IFACE" 2>/dev/null | cut -d\; -f11 | sed 's/ GiB//')
  USAGE=$(printf "%.1f" "$RAW")
  USAGE_PERCENT=$(awk -v u="$RAW" -v l="$LIMIT_GB" 'BEGIN { printf "%.1f", (u / l) * 100 }')
  echo "$USAGE" "$USAGE_PERCENT"
}

get_today_traffic() {
  vnstat -i "$IFACE" --json | jq -r '.interfaces[0].traffic.day[-1] | "\(.rx/1024/1024) \(.tx/1024/1024)"' 2>/dev/null || echo "0 0"
}

is_limited() {
  tc qdisc show dev "$IFACE" | grep -q "tbf" && echo "✅ 正在限速" || echo "🆗 未限速"
}

get_current_limit_rate() {
  tc qdisc show dev "$IFACE" | grep -oE 'rate [0-9]+[kmg]bit' || echo "-"
}

get_public_ip() {
  curl -s https://ipinfo.io/ip || echo "未知"
}

get_last_check_time() {
  [ -f /var/log/limit_check.log ] && tail -n1 /var/log/limit_check.log || echo "无记录"
}

while true; do
  clear
  read USAGE USAGE_PERCENT < <(get_usage_info)
  read RX TX < <(get_today_traffic)
  RX=$(printf "%.1f" "$RX")
  TX=$(printf "%.1f" "$TX")
  LIMIT_STATUS=$(is_limited)
  RATE=$(get_current_limit_rate)
  PUBIP=$(get_public_ip)
  LASTCHECK=$(get_last_check_time)
  OS_NAME=$(source /etc/os-release && echo "$ID $VERSION_ID")
  TODAY=$(date +"%Y-%m-%d")

  echo -e "${CYAN}╔════════════════════════════════════════════════╗"
  echo -e "║        🚦 流量限速管理控制台（ce）v$VERSION           ║"
  echo -e "╚════════════════════════════════════════════════╝${RESET}"
  echo -e "📅 当前日期：$TODAY"
  echo -e "🖥 系统版本：$OS_NAME"
  echo -e "🌐 主用网卡：$IFACE"
  echo -e "🌍 公网 IP：$PUBIP"
  echo -e "📊 今日流量：上行 ${TX} GiB / 下行 ${RX} GiB"
  echo -e "📈 流量使用：${USAGE} GiB / ${LIMIT_GB} GiB（${USAGE_PERCENT}%）"
  echo -e "🚦 限速状态：$LIMIT_STATUS"
  echo -e "🚀 当前速率：$RATE"
  echo -e "🕒 上次检测：$LASTCHECK"
  echo ""
  echo -e "${GREEN}1.${RESET} 检查是否应限速"
  echo -e "${GREEN}2.${RESET} 手动解除限速"
  echo -e "${GREEN}3.${RESET} 查看限速状态"
  echo -e "${GREEN}4.${RESET} 查看每日流量"
  echo -e "${GREEN}5.${RESET} 删除限速脚本"
  echo -e "${GREEN}6.${RESET} 修改限速配置"
  echo -e "${GREEN}7.${RESET} 退出"
  echo -e "${GREEN}8.${RESET} 检查 install_limit.sh 更新"
  echo ""
  read -p "👉 请选择操作 [1-8]: " opt
  case "$opt" in
    1) echo "[$(date +"%Y-%m-%d %H:%M:%S")] 执行限速检测" >> /var/log/limit_check.log; bash /root/limit_bandwidth.sh ;;
    2) bash /root/clear_limit.sh ;;
    3) tc -s qdisc ls dev "$IFACE" ;;
    4) vnstat -d ;;
    5)
      rm -f /root/install_limit.sh /root/limit_bandwidth.sh /root/clear_limit.sh
      rm -f /usr/local/bin/ce
      echo -e "${YELLOW}已删除所有限速相关脚本和控制命令${RESET}"
      break
      ;;
    6)
      echo -e "\n当前限制：${YELLOW}${LIMIT_GB} GiB${RESET}，限速：${YELLOW}${LIMIT_RATE}${RESET}"
      read -p "🔧 新的每日流量限制（GiB）: " new_gb
      read -p "🚀 新的限速值（如 512kbit、1mbit）: " new_rate
      if [[ "$new_gb" =~ ^[0-9]+$ ]] && [[ "$new_rate" =~ ^[0-9]+(kbit|mbit)$ ]]; then
        echo "LIMIT_GB=$new_gb" > $CONFIG_FILE
        echo "LIMIT_RATE=$new_rate" >> $CONFIG_FILE
        echo -e "${GREEN}✅ 配置已更新${RESET}"
      else
        echo -e "${RED}❌ 输入无效${RESET}"
      fi ;;
    7) break ;;
    8) bash /root/install_limit.sh --update ;;
    *) echo -e "${RED}❌ 无效选项${RESET}" ;;
  esac
  read -p "⏎ 按回车继续..." dummy
done
